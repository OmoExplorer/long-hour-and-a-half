package longHourAndAHalf

import java.awt.Color
import java.awt.Dimension
import java.awt.Font
import java.awt.event.ActionEvent
import java.awt.event.MouseAdapter
import java.awt.event.MouseEvent
import java.io.File
import java.io.FileInputStream
import java.io.IOException
import java.io.ObjectInputStream
import java.util.*
import javax.swing.*
import javax.swing.filechooser.FileFilter
import javax.swing.tree.DefaultMutableTreeNode
import javax.swing.tree.DefaultTreeModel

/**
 * @author JavaBird
 */
class setupFramePre : javax.swing.JFrame() {
    internal var fcWear: JFileChooser
    internal var fcGame: JFileChooser
    internal var game: Save? = null
    private var undiesColor = "Random"
    private var lowerColor = "Random"
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var basSlider: JSlider? = null
    private var basSliderRadio: JRadioButton? = null
    private var bladAtStartLabel: JLabel? = null
    private var buttonGroup1: ButtonGroup? = null
    private var buttonGroup2: ButtonGroup? = null
    private var buttonGroup3: ButtonGroup? = null
    private var difficultyPanel: JPanel? = null
    private var femaleRadio: JRadioButton? = null
    private var hardDiffRadio: JRadioButton? = null
    private var incontLabel: JLabel? = null
    private var incontSlider: JSlider? = null
    private var jScrollPane1: JScrollPane? = null
    private var jScrollPane2: JScrollPane? = null
    private var jScrollPane3: JScrollPane? = null
    private var jTextPane1: JTextPane? = null
    private var loadGame: JButton? = null
    private var lowerColor_black1: JPanel? = null
    private var lowerColor_blue1: JPanel? = null
    private var lowerColor_darkBlue1: JPanel? = null
    private var lowerColor_gray1: JPanel? = null
    private var lowerColor_green1: JPanel? = null
    private var lowerColor_orange1: JPanel? = null
    private var lowerColor_pink1: JPanel? = null
    private var lowerColor_purple1: JPanel? = null
    private var lowerColor_random1: JPanel? = null
    private var lowerColor_red1: JPanel? = null
    private var lowerColor_yellow1: JPanel? = null
    private var maleRadio: JRadioButton? = null
    private var nameField: JTextField? = null
    private var nameLabel: JLabel? = null
    private var normalDiffRadio: JRadioButton? = null
    private var outerwearLabel: JLabel? = null
    private var outerwearTree: JTree? = null
    private var randomBasSlider: JRadioButton? = null
    private var start: JButton? = null
    private var underwearLabel: JLabel? = null
    private var underwearTree: JTree? = null
    private var undiesColor_black: JPanel? = null
    private var undiesColor_blue: JPanel? = null
    private var undiesColor_darkBlue: JPanel? = null
    private var undiesColor_gray: JPanel? = null
    private var undiesColor_green: JPanel? = null
    private var undiesColor_orange: JPanel? = null
    private var undiesColor_pink: JPanel? = null
    private var undiesColor_purple: JPanel? = null
    private var undiesColor_random: JPanel? = null
    private var undiesColor_red: JPanel? = null
    private var undiesColor_yellow: JPanel? = null
    private var wearEditorButton: JButton? = null

    /**
     * Creates new form setupFrame
     */
    init {
        fcWear = JFileChooser()
        fcWear.fileFilter = object : FileFilter() {
            override fun accept(f: File): Boolean {
                var extension = ""
                val i = f.name.lastIndexOf('.')
                if (i > 0) {
                    extension = f.name.substring(i + 1)
                }
                return extension == "lhhwear"
            }

            override fun getDescription(): String {
                return "A Long Hour and a Half Saved game"
            }
        }

        fcGame = JFileChooser()
        fcGame.fileFilter = object : FileFilter() {
            override fun accept(f: File): Boolean {
                var extension = ""
                val i = f.name.lastIndexOf('.')
                if (i > 0) {
                    extension = f.name.substring(i + 1)
                }
                return extension == "lhhsav"
            }

            override fun getDescription(): String {
                return "A Long Hour and a Half Saved game"
            }
        }
        initComponents()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    fun initComponents() {

        buttonGroup1 = ButtonGroup()
        buttonGroup2 = ButtonGroup()
        buttonGroup3 = ButtonGroup()
        nameField = JTextField()
        maleRadio = JRadioButton()
        femaleRadio = JRadioButton()
        difficultyPanel = JPanel()
        normalDiffRadio = JRadioButton()
        hardDiffRadio = JRadioButton()
        incontLabel = JLabel()
        incontSlider = JSlider()
        bladAtStartLabel = JLabel()
        basSlider = JSlider()
        underwearLabel = JLabel()
        outerwearLabel = JLabel()
        start = JButton()
        nameLabel = JLabel()
        basSliderRadio = JRadioButton()
        randomBasSlider = JRadioButton()
        jScrollPane1 = JScrollPane()
        underwearTree = JTree()
        jScrollPane2 = JScrollPane()
        outerwearTree = JTree()
        jScrollPane3 = JScrollPane()
        jTextPane1 = JTextPane()
        undiesColor_black = JPanel()
        undiesColor_gray = JPanel()
        undiesColor_red = JPanel()
        undiesColor_orange = JPanel()
        undiesColor_yellow = JPanel()
        undiesColor_green = JPanel()
        undiesColor_blue = JPanel()
        undiesColor_darkBlue = JPanel()
        undiesColor_purple = JPanel()
        undiesColor_pink = JPanel()
        lowerColor_pink1 = JPanel()
        lowerColor_black1 = JPanel()
        lowerColor_gray1 = JPanel()
        lowerColor_red1 = JPanel()
        lowerColor_orange1 = JPanel()
        lowerColor_yellow1 = JPanel()
        lowerColor_green1 = JPanel()
        lowerColor_blue1 = JPanel()
        lowerColor_darkBlue1 = JPanel()
        lowerColor_purple1 = JPanel()
        undiesColor_random = JPanel()
        lowerColor_random1 = JPanel()
        wearEditorButton = JButton()
        loadGame = JButton()

        defaultCloseOperation = WindowConstants.EXIT_ON_CLOSE
        isResizable = false

        nameField!!.text = "Mrs. Nobody"
        nameField!!.toolTipText = "Your character's characterName"
        nameField!!.name = "nameField" // NOI18N

        buttonGroup1!!.add(maleRadio)
        maleRadio!!.text = "Male"
        maleRadio!!.name = "maleRadio" // NOI18N
        maleRadio!!.addActionListener { evt -> maleRadioActionPerformed(evt) }

        buttonGroup1!!.add(femaleRadio)
        femaleRadio!!.isSelected = true
        femaleRadio!!.text = "Female"
        femaleRadio!!.name = "femaleRadio" // NOI18N
        femaleRadio!!.addActionListener { evt -> femaleRadioActionPerformed(evt) }

        difficultyPanel!!.border = BorderFactory.createTitledBorder("Difficulty")
        difficultyPanel!!.toolTipText = ""
        difficultyPanel!!.name = "difficultyPanel" // NOI18N

        buttonGroup2!!.add(normalDiffRadio)
        normalDiffRadio!!.isSelected = true
        normalDiffRadio!!.text = "Normal"
        normalDiffRadio!!.name = "normalDiffRadio" // NOI18N
        normalDiffRadio!!.addActionListener { evt -> normalDiffRadioActionPerformed(evt) }

        buttonGroup2!!.add(hardDiffRadio)
        hardDiffRadio!!.text = "Hardcore"
        hardDiffRadio!!.toolTipText = "<html>\nTeacher never lets you pee<br>\nHarder to hold pee<br>\nYou may get caught holding pee<br>\n<i>Thirst</i> parameter\n</html>"
        hardDiffRadio!!.name = "hardDiffRadio" // NOI18N

        val difficultyPanelLayout = GroupLayout(difficultyPanel!!)
        difficultyPanel!!.layout = difficultyPanelLayout
        difficultyPanelLayout.setHorizontalGroup(difficultyPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(difficultyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(normalDiffRadio!!, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                        .addGap(100, 100, 100)
                        .addComponent(hardDiffRadio)
                        .addContainerGap())
        )
        difficultyPanelLayout.setVerticalGroup(difficultyPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(difficultyPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(normalDiffRadio)
                        .addComponent(hardDiffRadio))
        )

        incontLabel!!.text = "Incontinence"
        incontLabel!!.toolTipText = "How incontinent are you?"
        incontLabel!!.name = "incontLabel" // NOI18N

        incontSlider!!.minimum = 5
        incontSlider!!.toolTipText = "How incontinent are you?"
        incontSlider!!.value = 10
        incontSlider!!.name = "incontSlider" // NOI18N

        bladAtStartLabel!!.text = "Bladder at start"
        bladAtStartLabel!!.toolTipText = "How much you have to pee on wake?"
        bladAtStartLabel!!.name = "bladAtStartLabel" // NOI18N

        basSlider!!.toolTipText = "Defined value"
        basSlider!!.value = 0
        basSlider!!.name = "basSlider" // NOI18N

        underwearLabel!!.text = "Underwear:"
        underwearLabel!!.toolTipText = "Select your underwear"
        underwearLabel!!.name = "underwearLabel" // NOI18N

        outerwearLabel!!.text = "Outerwear:"
        outerwearLabel!!.toolTipText = "Select your outerwear"
        outerwearLabel!!.name = "outerwearLabel" // NOI18N

        start!!.font = Font("sansserif", 1, 12) // NOI18N
        start!!.text = "Start"
        start!!.toolTipText = "Start new game"
        start!!.name = "start" // NOI18N
        start!!.addActionListener { evt -> startActionPerformed(evt) }

        nameLabel!!.font = Font("sansserif", 1, 12) // NOI18N
        nameLabel!!.text = "Name"
        nameLabel!!.name = "nameLabel" // NOI18N

        buttonGroup3!!.add(basSliderRadio)
        basSliderRadio!!.toolTipText = "Defined value"
        basSliderRadio!!.name = "basSliderRadio" // NOI18N
        basSliderRadio!!.addActionListener { evt -> basSliderRadioActionPerformed(evt) }

        buttonGroup3!!.add(randomBasSlider)
        randomBasSlider!!.isSelected = true
        randomBasSlider!!.text = "Random"
        randomBasSlider!!.toolTipText = "Random value between 0% and 100%"
        randomBasSlider!!.name = "randomBasSlider" // NOI18N
        randomBasSlider!!.addActionListener { evt -> randomBasSliderActionPerformed(evt) }

        jScrollPane1!!.name = "jScrollPane1" // NOI18N

        var treeNode1 = DefaultMutableTreeNode("root")
        var treeNode2 = DefaultMutableTreeNode("Random")
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("Female")
        var treeNode3 = DefaultMutableTreeNode("Panties")
        var treeNode4 = DefaultMutableTreeNode("Strings")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Tanga panties")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Regular panties")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("\"Boy shorts\" panties")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Swimwear")
        treeNode4 = DefaultMutableTreeNode("String bikini")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Regular bikini")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Swimsuit")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Diapers")
        treeNode4 = DefaultMutableTreeNode("Light diaper")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Normal diaper")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Heavy diaper")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Menstrual pads")
        treeNode4 = DefaultMutableTreeNode("Light pad")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Normal pad")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Big pad")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("Male")
        treeNode3 = DefaultMutableTreeNode("Pants")
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Shorts-alike pants")
        treeNode2.add(treeNode3)
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("Special")
        treeNode3 = DefaultMutableTreeNode("Anti-gravity pants")
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Super-absorbing diaper")
        treeNode2.add(treeNode3)
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("No underwear")
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("Custom")
        treeNode1.add(treeNode2)
        underwearTree!!.model = DefaultTreeModel(treeNode1)
        underwearTree!!.name = "underwearTree" // NOI18N
        underwearTree!!.isRootVisible = false
        jScrollPane1!!.setViewportView(underwearTree)

        jScrollPane2!!.name = "jScrollPane2" // NOI18N

        treeNode1 = DefaultMutableTreeNode("root")
        treeNode2 = DefaultMutableTreeNode("Random")
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("Female")
        treeNode3 = DefaultMutableTreeNode("Jeans")
        treeNode4 = DefaultMutableTreeNode("Long jeans")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Knee-length jeans")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Short jeans")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Very short jeans")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Trousers")
        treeNode4 = DefaultMutableTreeNode("Long trousers")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Knee-length trousers")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Short trousers")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Very short trousers")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Skirts")
        treeNode4 = DefaultMutableTreeNode("Long skirt")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Knee-length skirt")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Short skirt")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Mini skirt")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Micro skirt")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Long skirt and tights")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Knee-length skirt and tights")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Short skirt and tights")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Mini skirt and tights")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Micro skirt and tights")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Leggings")
        treeNode2.add(treeNode3)
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("Male")
        treeNode3 = DefaultMutableTreeNode("Jeans")
        treeNode4 = DefaultMutableTreeNode("Short male jeans")
        treeNode3.add(treeNode4)
        treeNode4 = DefaultMutableTreeNode("Normal male jeans")
        treeNode3.add(treeNode4)
        treeNode2.add(treeNode3)
        treeNode3 = DefaultMutableTreeNode("Male trousers")
        treeNode2.add(treeNode3)
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("No outerwear")
        treeNode1.add(treeNode2)
        treeNode2 = DefaultMutableTreeNode("Custom")
        treeNode1.add(treeNode2)
        outerwearTree!!.model = DefaultTreeModel(treeNode1)
        outerwearTree!!.name = "outerwearTree" // NOI18N
        outerwearTree!!.isRootVisible = false
        jScrollPane2!!.setViewportView(outerwearTree)

        jScrollPane3!!.name = "jScrollPane3" // NOI18N

        jTextPane1!!.isEditable = false
        jTextPane1!!.font = Font("Tahoma", 0, 12) // NOI18N
        jTextPane1!!.text = "This program is thanks to the wonderful help of the following users:\nAnna May, FromRUSForum, and notwillnotcast of Omo.org, and two others (who choose to not be credited for differing reasons —\n                                            helping a ton, along with a few others helping with my minor mistakes!\n\nIf your (user)characterName is not here and you want it here, just shoot me a message and I'll add it post-haste!"
        jTextPane1!!.name = "creditsPane" // NOI18N
        jScrollPane3!!.setViewportView(jTextPane1)

        undiesColor_black!!.background = Color(0, 0, 0)
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255))
        undiesColor_black!!.toolTipText = "Black"
        undiesColor_black!!.name = "undiesColor_black" // NOI18N
        undiesColor_black!!.preferredSize = Dimension(20, 20)
        undiesColor_black!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_blackMouseClicked(evt)
            }
        })

        val undiesColor_blackLayout = GroupLayout(undiesColor_black!!)
        undiesColor_black!!.layout = undiesColor_blackLayout
        undiesColor_blackLayout.setHorizontalGroup(undiesColor_blackLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_blackLayout.setVerticalGroup(undiesColor_blackLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_gray!!.background = Color(153, 153, 153)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_gray!!.toolTipText = "Gray"
        undiesColor_gray!!.name = "undiesColor_gray" // NOI18N
        undiesColor_gray!!.preferredSize = Dimension(20, 20)
        undiesColor_gray!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_grayMouseClicked(evt)
            }
        })

        val undiesColor_grayLayout = GroupLayout(undiesColor_gray!!)
        undiesColor_gray!!.layout = undiesColor_grayLayout
        undiesColor_grayLayout.setHorizontalGroup(undiesColor_grayLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_grayLayout.setVerticalGroup(undiesColor_grayLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_red!!.background = Color(255, 0, 0)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_red!!.toolTipText = "Red"
        undiesColor_red!!.name = "undiesColor_red" // NOI18N
        undiesColor_red!!.preferredSize = Dimension(20, 20)
        undiesColor_red!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_redMouseClicked(evt)
            }
        })

        val undiesColor_redLayout = GroupLayout(undiesColor_red!!)
        undiesColor_red!!.layout = undiesColor_redLayout
        undiesColor_redLayout.setHorizontalGroup(undiesColor_redLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_redLayout.setVerticalGroup(undiesColor_redLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_orange!!.background = Color(255, 153, 0)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_orange!!.toolTipText = "Orange"
        undiesColor_orange!!.name = "undiesColor_orange" // NOI18N
        undiesColor_orange!!.preferredSize = Dimension(20, 20)
        undiesColor_orange!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_orangeMouseClicked(evt)
            }
        })

        val undiesColor_orangeLayout = GroupLayout(undiesColor_orange!!)
        undiesColor_orange!!.layout = undiesColor_orangeLayout
        undiesColor_orangeLayout.setHorizontalGroup(undiesColor_orangeLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_orangeLayout.setVerticalGroup(undiesColor_orangeLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_yellow!!.background = Color(255, 255, 0)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_yellow!!.toolTipText = "Yellow"
        undiesColor_yellow!!.name = "undiesColor_yellow" // NOI18N
        undiesColor_yellow!!.preferredSize = Dimension(20, 20)
        undiesColor_yellow!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_yellowMouseClicked(evt)
            }
        })

        val undiesColor_yellowLayout = GroupLayout(undiesColor_yellow!!)
        undiesColor_yellow!!.layout = undiesColor_yellowLayout
        undiesColor_yellowLayout.setHorizontalGroup(undiesColor_yellowLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_yellowLayout.setVerticalGroup(undiesColor_yellowLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_green!!.background = Color(0, 255, 0)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_green!!.toolTipText = "Green"
        undiesColor_green!!.name = "undiesColor_green" // NOI18N
        undiesColor_green!!.preferredSize = Dimension(20, 20)
        undiesColor_green!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_greenMouseClicked(evt)
            }
        })

        val undiesColor_greenLayout = GroupLayout(undiesColor_green!!)
        undiesColor_green!!.layout = undiesColor_greenLayout
        undiesColor_greenLayout.setHorizontalGroup(undiesColor_greenLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_greenLayout.setVerticalGroup(undiesColor_greenLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_blue!!.background = Color(0, 255, 204)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_blue!!.toolTipText = "Blue"
        undiesColor_blue!!.name = "undiesColor_blue" // NOI18N
        undiesColor_blue!!.preferredSize = Dimension(20, 20)
        undiesColor_blue!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_blueMouseClicked(evt)
            }
        })

        val undiesColor_blueLayout = GroupLayout(undiesColor_blue!!)
        undiesColor_blue!!.layout = undiesColor_blueLayout
        undiesColor_blueLayout.setHorizontalGroup(undiesColor_blueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_blueLayout.setVerticalGroup(undiesColor_blueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_darkBlue!!.background = Color(0, 0, 204)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_darkBlue!!.toolTipText = "Dark blue"
        undiesColor_darkBlue!!.name = "undiesColor_darkBlue" // NOI18N
        undiesColor_darkBlue!!.preferredSize = Dimension(20, 20)
        undiesColor_darkBlue!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_darkBlueMouseClicked(evt)
            }
        })

        val undiesColor_darkBlueLayout = GroupLayout(undiesColor_darkBlue!!)
        undiesColor_darkBlue!!.layout = undiesColor_darkBlueLayout
        undiesColor_darkBlueLayout.setHorizontalGroup(undiesColor_darkBlueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_darkBlueLayout.setVerticalGroup(undiesColor_darkBlueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_purple!!.background = Color(153, 0, 153)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_purple!!.toolTipText = "Purple"
        undiesColor_purple!!.name = "undiesColor_purple" // NOI18N
        undiesColor_purple!!.preferredSize = Dimension(20, 20)
        undiesColor_purple!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_purpleMouseClicked(evt)
            }
        })

        val undiesColor_purpleLayout = GroupLayout(undiesColor_purple!!)
        undiesColor_purple!!.layout = undiesColor_purpleLayout
        undiesColor_purpleLayout.setHorizontalGroup(undiesColor_purpleLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_purpleLayout.setVerticalGroup(undiesColor_purpleLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_pink!!.background = Color(255, 51, 255)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        undiesColor_pink!!.toolTipText = "Pink"
        undiesColor_pink!!.name = "undiesColor_pink" // NOI18N
        undiesColor_pink!!.preferredSize = Dimension(20, 20)
        undiesColor_pink!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_pinkMouseClicked(evt)
            }
        })

        val undiesColor_pinkLayout = GroupLayout(undiesColor_pink!!)
        undiesColor_pink!!.layout = undiesColor_pinkLayout
        undiesColor_pinkLayout.setHorizontalGroup(undiesColor_pinkLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_pinkLayout.setVerticalGroup(undiesColor_pinkLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_pink1!!.background = Color(255, 51, 255)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_pink1!!.toolTipText = "Pink"
        lowerColor_pink1!!.name = "lowerColor_pink1" // NOI18N
        lowerColor_pink1!!.preferredSize = Dimension(20, 20)
        lowerColor_pink1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_pink1MouseClicked(evt)
            }
        })

        val lowerColor_pink1Layout = GroupLayout(lowerColor_pink1!!)
        lowerColor_pink1!!.layout = lowerColor_pink1Layout
        lowerColor_pink1Layout.setHorizontalGroup(lowerColor_pink1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_pink1Layout.setVerticalGroup(lowerColor_pink1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_black1!!.background = Color(0, 0, 0)
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255))
        lowerColor_black1!!.toolTipText = "Black"
        lowerColor_black1!!.name = "lowerColor_black1" // NOI18N
        lowerColor_black1!!.preferredSize = Dimension(20, 20)
        lowerColor_black1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_black1MouseClicked(evt)
            }
        })

        val lowerColor_black1Layout = GroupLayout(lowerColor_black1!!)
        lowerColor_black1!!.layout = lowerColor_black1Layout
        lowerColor_black1Layout.setHorizontalGroup(lowerColor_black1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_black1Layout.setVerticalGroup(lowerColor_black1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_gray1!!.background = Color(153, 153, 153)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_gray1!!.toolTipText = "Gray"
        lowerColor_gray1!!.name = "lowerColor_gray1" // NOI18N
        lowerColor_gray1!!.preferredSize = Dimension(20, 20)
        lowerColor_gray1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_gray1MouseClicked(evt)
            }
        })

        val lowerColor_gray1Layout = GroupLayout(lowerColor_gray1!!)
        lowerColor_gray1!!.layout = lowerColor_gray1Layout
        lowerColor_gray1Layout.setHorizontalGroup(lowerColor_gray1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_gray1Layout.setVerticalGroup(lowerColor_gray1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_red1!!.background = Color(255, 0, 0)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_red1!!.toolTipText = "Red"
        lowerColor_red1!!.name = "lowerColor_red1" // NOI18N
        lowerColor_red1!!.preferredSize = Dimension(20, 20)
        lowerColor_red1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_red1MouseClicked(evt)
            }
        })

        val lowerColor_red1Layout = GroupLayout(lowerColor_red1!!)
        lowerColor_red1!!.layout = lowerColor_red1Layout
        lowerColor_red1Layout.setHorizontalGroup(lowerColor_red1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_red1Layout.setVerticalGroup(lowerColor_red1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_orange1!!.background = Color(255, 153, 0)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_orange1!!.toolTipText = "Orange"
        lowerColor_orange1!!.name = "lowerColor_orange1" // NOI18N
        lowerColor_orange1!!.preferredSize = Dimension(20, 20)
        lowerColor_orange1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_orange1MouseClicked(evt)
            }
        })

        val lowerColor_orange1Layout = GroupLayout(lowerColor_orange1!!)
        lowerColor_orange1!!.layout = lowerColor_orange1Layout
        lowerColor_orange1Layout.setHorizontalGroup(lowerColor_orange1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_orange1Layout.setVerticalGroup(lowerColor_orange1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_yellow1!!.background = Color(255, 255, 0)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_yellow1!!.toolTipText = "Yellow"
        lowerColor_yellow1!!.name = "lowerColor_yellow1" // NOI18N
        lowerColor_yellow1!!.preferredSize = Dimension(20, 20)
        lowerColor_yellow1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_yellow1MouseClicked(evt)
            }
        })

        val lowerColor_yellow1Layout = GroupLayout(lowerColor_yellow1!!)
        lowerColor_yellow1!!.layout = lowerColor_yellow1Layout
        lowerColor_yellow1Layout.setHorizontalGroup(lowerColor_yellow1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_yellow1Layout.setVerticalGroup(lowerColor_yellow1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_green1!!.background = Color(0, 255, 0)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_green1!!.toolTipText = "Green"
        lowerColor_green1!!.name = "lowerColor_green1" // NOI18N
        lowerColor_green1!!.preferredSize = Dimension(20, 20)
        lowerColor_green1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_green1MouseClicked(evt)
            }
        })

        val lowerColor_green1Layout = GroupLayout(lowerColor_green1!!)
        lowerColor_green1!!.layout = lowerColor_green1Layout
        lowerColor_green1Layout.setHorizontalGroup(lowerColor_green1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_green1Layout.setVerticalGroup(lowerColor_green1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_blue1!!.background = Color(0, 255, 204)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_blue1!!.toolTipText = "Blue"
        lowerColor_blue1!!.name = "lowerColor_blue1" // NOI18N
        lowerColor_blue1!!.preferredSize = Dimension(20, 20)
        lowerColor_blue1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_blue1MouseClicked(evt)
            }
        })

        val lowerColor_blue1Layout = GroupLayout(lowerColor_blue1!!)
        lowerColor_blue1!!.layout = lowerColor_blue1Layout
        lowerColor_blue1Layout.setHorizontalGroup(lowerColor_blue1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_blue1Layout.setVerticalGroup(lowerColor_blue1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_darkBlue1!!.background = Color(0, 0, 204)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_darkBlue1!!.toolTipText = "Dark blue"
        lowerColor_darkBlue1!!.name = "lowerColor_darkBlue1" // NOI18N
        lowerColor_darkBlue1!!.preferredSize = Dimension(20, 20)
        lowerColor_darkBlue1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_darkBlue1MouseClicked(evt)
            }
        })

        val lowerColor_darkBlue1Layout = GroupLayout(lowerColor_darkBlue1!!)
        lowerColor_darkBlue1!!.layout = lowerColor_darkBlue1Layout
        lowerColor_darkBlue1Layout.setHorizontalGroup(lowerColor_darkBlue1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_darkBlue1Layout.setVerticalGroup(lowerColor_darkBlue1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_purple1!!.background = Color(153, 0, 153)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0))
        lowerColor_purple1!!.toolTipText = "Purple"
        lowerColor_purple1!!.name = "lowerColor_purple1" // NOI18N
        lowerColor_purple1!!.preferredSize = Dimension(20, 20)
        lowerColor_purple1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_purple1MouseClicked(evt)
            }
        })

        val lowerColor_purple1Layout = GroupLayout(lowerColor_purple1!!)
        lowerColor_purple1!!.layout = lowerColor_purple1Layout
        lowerColor_purple1Layout.setHorizontalGroup(lowerColor_purple1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_purple1Layout.setVerticalGroup(lowerColor_purple1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 18, java.lang.Short.MAX_VALUE.toInt())
        )

        undiesColor_random!!.background = Color(204, 204, 204)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)
        undiesColor_random!!.toolTipText = "Random"
        undiesColor_random!!.name = "undiesColor_random" // NOI18N
        undiesColor_random!!.preferredSize = Dimension(20, 20)
        undiesColor_random!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                undiesColor_randomMouseClicked(evt)
            }
        })

        val undiesColor_randomLayout = GroupLayout(undiesColor_random!!)
        undiesColor_random!!.layout = undiesColor_randomLayout
        undiesColor_randomLayout.setHorizontalGroup(undiesColor_randomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 14, java.lang.Short.MAX_VALUE.toInt())
        )
        undiesColor_randomLayout.setVerticalGroup(undiesColor_randomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 14, java.lang.Short.MAX_VALUE.toInt())
        )

        lowerColor_random1!!.background = Color(204, 204, 204)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)
        lowerColor_random1!!.toolTipText = "Random"
        lowerColor_random1!!.name = "lowerColor_random1" // NOI18N
        lowerColor_random1!!.preferredSize = Dimension(20, 20)
        lowerColor_random1!!.addMouseListener(object : MouseAdapter() {
            override fun mouseClicked(evt: MouseEvent?) {
                lowerColor_random1MouseClicked(evt)
            }
        })

        val lowerColor_random1Layout = GroupLayout(lowerColor_random1!!)
        lowerColor_random1!!.layout = lowerColor_random1Layout
        lowerColor_random1Layout.setHorizontalGroup(lowerColor_random1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 14, java.lang.Short.MAX_VALUE.toInt())
        )
        lowerColor_random1Layout.setVerticalGroup(lowerColor_random1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 14, java.lang.Short.MAX_VALUE.toInt())
        )

        wearEditorButton!!.text = "Wear editor"
        wearEditorButton!!.toolTipText = "Create your own wear and use it in game."
        wearEditorButton!!.name = "wearEditorButton" // NOI18N
        wearEditorButton!!.addActionListener { evt -> wearEditorButtonActionPerformed(evt) }

        loadGame!!.text = "Load game..."
        loadGame!!.toolTipText = "Load a paused game"
        loadGame!!.name = "loadGame" // NOI18N
        loadGame!!.addActionListener { evt -> loadGameActionPerformed(evt) }

        val layout = GroupLayout(contentPane)
        contentPane.layout = layout
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane3!!, GroupLayout.DEFAULT_SIZE, 782, java.lang.Short.MAX_VALUE.toInt())
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addComponent(nameField)
                                                                .addComponent(difficultyPanel!!, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                                .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(nameLabel)
                                                                        .addGap(0, 0, java.lang.Short.MAX_VALUE.toInt())))
                                                        .addGap(5, 5, 5))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addComponent(underwearLabel)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(6, 6, 6)
                                                                        .addComponent(undiesColor_black!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_gray!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_red!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_orange!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_yellow!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_green!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_blue!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_darkBlue!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_purple!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(undiesColor_pink!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(18, 18, 18)
                                                                        .addComponent(undiesColor_random!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())))
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(basSliderRadio)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(basSlider!!, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(randomBasSlider))
                                                .addComponent(jScrollPane2)
                                                .addComponent(incontSlider!!, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(femaleRadio)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                                        .addComponent(maleRadio))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                .addComponent(outerwearLabel)
                                                                .addComponent(incontLabel)
                                                                .addComponent(bladAtStartLabel)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(lowerColor_black1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_gray1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_red1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_orange1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_yellow1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_green1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_blue1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_darkBlue1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_purple1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(lowerColor_pink1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(18, 18, 18)
                                                                        .addComponent(lowerColor_random1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(0, 0, java.lang.Short.MAX_VALUE.toInt()))))
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(loadGame!!, GroupLayout.PREFERRED_SIZE, 129, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(start!!, GroupLayout.PREFERRED_SIZE, 455, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(wearEditorButton!!, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())))
                        .addContainerGap())
        )
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameLabel)
                                        .addGap(8, 8, 8)
                                        .addComponent(nameField!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(difficultyPanel!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(underwearLabel)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1!!, GroupLayout.PREFERRED_SIZE, 155, GroupLayout.PREFERRED_SIZE))
                                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                .addComponent(femaleRadio)
                                                .addComponent(maleRadio))
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bladAtStartLabel)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(basSlider!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(basSliderRadio)
                                                .addComponent(randomBasSlider))
                                        .addGap(8, 8, 8)
                                        .addComponent(incontLabel)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(incontSlider!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(outerwearLabel)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2!!, GroupLayout.PREFERRED_SIZE, 155, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 21, java.lang.Short.MAX_VALUE.toInt())
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(undiesColor_black!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_gray!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_red!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_orange!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_green!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_blue!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_darkBlue!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_purple!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_pink!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_yellow!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_black1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_gray1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_red1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_orange1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_green1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_blue1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_darkBlue1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_purple1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_pink1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_yellow1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(undiesColor_random!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(lowerColor_random1!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3!!, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(start!!, GroupLayout.DEFAULT_SIZE, 117, java.lang.Short.MAX_VALUE.toInt())
                                .addComponent(wearEditorButton!!, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt())
                                .addComponent(loadGame!!, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, java.lang.Short.MAX_VALUE.toInt()))
                        .addContainerGap())
        )

        pack()
    }// </editor-fold>//GEN-END:initComponents

    private fun startActionPerformed(evt: ActionEvent) {//GEN-FIRST:event_startActionPerformed
        var gnd = Gender.MALE
        val bas: Int
        val rnd = Random()
        var diff = false
        var underwearToAssign = "Random"
        var outerwearToAssign = "Random"

        if (femaleRadio!!.isSelected)
            gnd = Gender.FEMALE

        if (basSliderRadio!!.isSelected)
            bas = basSlider!!.value
        else
            bas = rnd.nextInt(51)

        if (hardDiffRadio!!.isSelected) {
            diff = true
        }

        var incont = (incontSlider!!.value / 10).toDouble()
        if (incont < 1)
            incont += 0.5

        try {
            println(underwearTree!!.lastSelectedPathComponent.toString())
        } catch (e: NullPointerException) {
            println("null")
        }

        try {
            println(outerwearTree!!.lastSelectedPathComponent.toString())
        } catch (e: NullPointerException) {
            println("null")
        }

        try {
            println(lowerColor)
        } catch (e: NullPointerException) {
            println("null")
        }

        try {
            println(undiesColor)
        } catch (e: NullPointerException) {
            println("null")
        }

        if (underwearTree!!.lastSelectedPathComponent != null)
            underwearToAssign = underwearTree!!.lastSelectedPathComponent.toString()
        if (outerwearTree!!.lastSelectedPathComponent != null)
            outerwearToAssign = outerwearTree!!.lastSelectedPathComponent.toString()


        //        try {
        //            switch (underwearTree.getLastSelectedPathComponent().toString()) {
        //                case "Female":
        //                case "Male":
        //                case "Special":
        //                case "Panties":
        //                case "Swimwear":
        //                case "Diapers":
        //                case "Menstrual pads":
        //
        //                    break;
        //                default:
        //                    switch (outerwearTree.getLastSelectedPathComponent().toString()) {
        //                        case "Male":
        //                        case "Female":
        //                        case "Jeans":
        //                        case "Trousers":
        //                        case "Skirts":
        //                            break;
        //                        default:
//        ALongHourAndAHalf(nameField!!.text,
//                gnd,
//                diff,
//                incont.toDouble(), bas.toDouble(),
//                underwearToAssign,
//                outerwearToAssign,
//                undiesColor,
//                lowerColor)
        ALongHourAndAHalf(
                Character(
                        nameField!!.text,
                        gnd,
                        incont.toDouble(), bas.toDouble(),
                        underwearToAssign,
                        outerwearToAssign,
                        undiesColor, lowerColor
                ),
                diff
        )

        this.dispose()
        //                    }
        //            }
        //        } catch (NullPointerException e) {
        //            System.err.println("Duh");
        //        }
    }//GEN-LAST:event_startActionPerformed

    private fun basSliderRadioActionPerformed(evt: ActionEvent) {//GEN-FIRST:event_basSliderRadioActionPerformed

    }//GEN-LAST:event_basSliderRadioActionPerformed

    private fun normalDiffRadioActionPerformed(evt: ActionEvent) {//GEN-FIRST:event_normalDiffRadioActionPerformed

    }//GEN-LAST:event_normalDiffRadioActionPerformed

    private fun randomBasSliderActionPerformed(evt: ActionEvent) {//GEN-FIRST:event_randomBasSliderActionPerformed

    }//GEN-LAST:event_randomBasSliderActionPerformed

    private fun maleRadioActionPerformed(evt: ActionEvent) {//GEN-FIRST:event_maleRadioActionPerformed
        if (nameField!!.text == "Mrs. Nobody")
            nameField!!.text = "Mr. Nobody"
    }//GEN-LAST:event_maleRadioActionPerformed

    private fun femaleRadioActionPerformed(evt: ActionEvent) {//GEN-FIRST:event_femaleRadioActionPerformed
        if (nameField!!.text == "Mr. Nobody")
            nameField!!.text = "Mrs. Nobody"
    }//GEN-LAST:event_femaleRadioActionPerformed

    private fun undiesColor_blackMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_blackMouseClicked
    {//GEN-HEADEREND:event_undiesColor_blackMouseClicked
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 3)

        //Unchecking other colors
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Black"
    }//GEN-LAST:event_undiesColor_blackMouseClicked

    private fun undiesColor_grayMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_grayMouseClicked
    {//GEN-HEADEREND:event_undiesColor_grayMouseClicked
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Gray"
    }//GEN-LAST:event_undiesColor_grayMouseClicked

    private fun undiesColor_redMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_redMouseClicked
    {//GEN-HEADEREND:event_undiesColor_redMouseClicked
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Red"
    }//GEN-LAST:event_undiesColor_redMouseClicked

    private fun undiesColor_orangeMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_orangeMouseClicked
    {//GEN-HEADEREND:event_undiesColor_orangeMouseClicked
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Orange"
    }//GEN-LAST:event_undiesColor_orangeMouseClicked

    private fun undiesColor_yellowMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_yellowMouseClicked
    {//GEN-HEADEREND:event_undiesColor_yellowMouseClicked
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Yellow"
    }//GEN-LAST:event_undiesColor_yellowMouseClicked

    private fun undiesColor_greenMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_greenMouseClicked
    {//GEN-HEADEREND:event_undiesColor_greenMouseClicked
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Green"
    }//GEN-LAST:event_undiesColor_greenMouseClicked

    private fun undiesColor_blueMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_blueMouseClicked
    {//GEN-HEADEREND:event_undiesColor_blueMouseClicked
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Blue"
    }//GEN-LAST:event_undiesColor_blueMouseClicked

    private fun undiesColor_darkBlueMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_darkBlueMouseClicked
    {//GEN-HEADEREND:event_undiesColor_darkBlueMouseClicked
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Dark blue"
    }//GEN-LAST:event_undiesColor_darkBlueMouseClicked

    private fun undiesColor_purpleMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_purpleMouseClicked
    {//GEN-HEADEREND:event_undiesColor_purpleMouseClicked
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Purple"
    }//GEN-LAST:event_undiesColor_purpleMouseClicked

    private fun undiesColor_pinkMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_pinkMouseClicked
    {//GEN-HEADEREND:event_undiesColor_pinkMouseClicked
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Pink"
    }//GEN-LAST:event_undiesColor_pinkMouseClicked

    private fun lowerColor_pink1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_pink1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_pink1MouseClicked
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Pink"
    }//GEN-LAST:event_lowerColor_pink1MouseClicked

    private fun lowerColor_black1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_black1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_black1MouseClicked
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 3)

        //Unchecking other colors
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Black"
    }//GEN-LAST:event_lowerColor_black1MouseClicked

    private fun lowerColor_gray1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_gray1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_gray1MouseClicked
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Gray"
    }//GEN-LAST:event_lowerColor_gray1MouseClicked

    private fun lowerColor_red1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_red1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_red1MouseClicked
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Red"
    }//GEN-LAST:event_lowerColor_red1MouseClicked

    private fun lowerColor_orange1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_orange1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_orange1MouseClicked
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Orange"
    }//GEN-LAST:event_lowerColor_orange1MouseClicked

    private fun lowerColor_yellow1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_yellow1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_yellow1MouseClicked
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Yellow"
    }//GEN-LAST:event_lowerColor_yellow1MouseClicked

    private fun lowerColor_green1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_green1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_green1MouseClicked
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Green"
    }//GEN-LAST:event_lowerColor_green1MouseClicked

    private fun lowerColor_blue1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_blue1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_blue1MouseClicked
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Blue"
    }//GEN-LAST:event_lowerColor_blue1MouseClicked

    private fun lowerColor_darkBlue1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_darkBlue1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_darkBlue1MouseClicked
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Dark blue"
    }//GEN-LAST:event_lowerColor_darkBlue1MouseClicked

    private fun lowerColor_purple1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_purple1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_purple1MouseClicked
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Purple"
    }//GEN-LAST:event_lowerColor_purple1MouseClicked

    private fun undiesColor_randomMouseClicked(evt: MouseEvent?)//GEN-FIRST:event_undiesColor_randomMouseClicked
    {//GEN-HEADEREND:event_undiesColor_randomMouseClicked
        undiesColor_random!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        undiesColor_black!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        undiesColor_red!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_orange!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_yellow!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_green!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_blue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_darkBlue!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_gray!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_pink!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        undiesColor_purple!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        undiesColor = "Random"
    }//GEN-LAST:event_undiesColor_randomMouseClicked

    private fun lowerColor_random1MouseClicked(evt: MouseEvent?)//GEN-FIRST:event_lowerColor_random1MouseClicked
    {//GEN-HEADEREND:event_lowerColor_random1MouseClicked
        lowerColor_random1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 3)

        //Unchecking other colors
        lowerColor_black1!!.border = BorderFactory.createLineBorder(Color(255, 255, 255), 1)
        lowerColor_red1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_orange1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_yellow1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_green1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_blue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_darkBlue1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_gray1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_pink1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)
        lowerColor_purple1!!.border = BorderFactory.createLineBorder(Color(0, 0, 0), 1)

        lowerColor = "Random"
    }//GEN-LAST:event_lowerColor_random1MouseClicked

    private fun wearEditorButtonActionPerformed(evt: ActionEvent)//GEN-FIRST:event_wearEditorButtonActionPerformed
    {//GEN-HEADEREND:event_wearEditorButtonActionPerformed
        WearEditor.main(arrayOf(""))
    }//GEN-LAST:event_wearEditorButtonActionPerformed

    private fun wearEditorActionPerformed(evt: ActionEvent)//GEN-FIRST:event_wearEditorActionPerformed
    {//GEN-HEADEREND:event_wearEditorActionPerformed

    }//GEN-LAST:event_wearEditorActionPerformed

    private fun loadGameButtonActionPerformed(evt: ActionEvent)//GEN-FIRST:event_loadGameButtonActionPerformed
    {//GEN-HEADEREND:event_loadGameButtonActionPerformed

    }//GEN-LAST:event_loadGameButtonActionPerformed

    private fun loadGameActionPerformed(evt: ActionEvent)//GEN-FIRST:event_loadGameActionPerformed
    {//GEN-HEADEREND:event_loadGameActionPerformed
        if (fcGame.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            val file = fcGame.selectedFile
            try {
                val fin = FileInputStream(file)
                val ois = ObjectInputStream(fin)
                val save = ois.readObject() as Save
                ALongHourAndAHalf(save)
                dispose()
            } catch (e: IOException) {
                JOptionPane.showMessageDialog(this, "File error.", "Error", JOptionPane.ERROR_MESSAGE)
            } catch (e: ClassNotFoundException) {
                JOptionPane.showMessageDialog(this, "File error.", "Error", JOptionPane.ERROR_MESSAGE)
            }

        }
    }//GEN-LAST:event_loadGameActionPerformed

    companion object {

        private val serialVersionUID = 1L

        /**
         * @param args the command line arguments
         */
        @JvmStatic
        fun main(args: Array<String>) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
            try {
                for (info in javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus" == info.name) {
                        javax.swing.UIManager.setLookAndFeel(info.className)
                        break
                    }
                }
            } catch (ex: ClassNotFoundException) {
                java.util.logging.Logger.getLogger(setupFramePre::class.java.name).log(java.util.logging.Level.SEVERE, null, ex)
            } catch (ex: InstantiationException) {
                java.util.logging.Logger.getLogger(setupFramePre::class.java.name).log(java.util.logging.Level.SEVERE, null, ex)
            } catch (ex: IllegalAccessException) {
                java.util.logging.Logger.getLogger(setupFramePre::class.java.name).log(java.util.logging.Level.SEVERE, null, ex)
            } catch (ex: javax.swing.UnsupportedLookAndFeelException) {
                java.util.logging.Logger.getLogger(setupFramePre::class.java.name).log(java.util.logging.Level.SEVERE, null, ex)
            }

            //</editor-fold>
            //</editor-fold>

            //</editor-fold>
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater { setupFramePre().isVisible = true }
        }
    }
    // End of variables declaration//GEN-END:variables
}
